<?xml version="1.0" encoding="UTF-8"?>
<project name="build-web-container" xmlns:ivy="antlib:org.apache.ivy.ant">

	<path id="unit.test.bundles">
		<pathelement location="../org.eclipse.gemini.web.core"/>
		<pathelement location="../org.eclipse.gemini.web.tomcat"/>
		<pathelement location="../org.eclipse.gemini.web.extender"/>
	</path>
	
	<path id="bundles">
		<path refid="unit.test.bundles"/>
		<pathelement location="../org.eclipse.gemini.web"/>
		<pathelement location="../org.eclipse.gemini.web.test"/>
	</path>

	<property file="${basedir}/../build.properties"/>
	<property file="${basedir}/../build.versions"/>
	
	<import file="${basedir}/../virgo-build/multi-bundle/default.xml"/>

	<property name="collect.output.dir" value="${target.dir}/bundles"/>

	<target name="precommit" depends="clean, clean-integration, test, findbugs"/>

	<path id="test.apps.bundles">
		<pathelement location="../test-bundles/simple-manifest-only"/>
		<pathelement location="../test-bundles/simple-war"/>
		<pathelement location="../test-bundles/war-with-another-servlet"/>
		<pathelement location="../test-bundles/war-with-jsp"/>
		<pathelement location="../test-bundles/war-with-servlet"/>
		<pathelement location="../test-bundles/war-with-tld"/>
		<pathelement location="../test-bundles/fragment-provides-web-xml"/>
		<pathelement location="../test-bundles/war-with-web-xml-from-fragment"/>
		<pathelement location="../test-bundles/war-with-context-xml-custom-classloader"/>
		<pathelement location="../test-bundles/war-with-context-xml-cross-context"/>
	</path>

	<path id="doc.bundles">
		<pathelement location="../org.eclipse.gemini.web.documentation/user-guide"/>
		<pathelement location="../org.eclipse.gemini.web.documentation/programmer-guide"/>
	</path>

	<target name="test" depends="build-test-apps, quality-multi-bundle.test" description="Rebuild all the test apps before running the test suites">
	</target>

	<target name="build-test-apps" description="Build all of the test applications">
		<all-bundles target="clean" buildpathRef="test.apps.bundles"></all-bundles>
		<all-bundles target="jar" buildpathRef="test.apps.bundles"></all-bundles>
	</target>

	<target name="collect" depends="ivy.init">
		<mkdir dir="${collect.output.dir}"/>		
		<ivy:retrieve organisation="org.eclipse.gemini.web" module="org.eclipse.gemini.web" inline="true" type="jar" pattern="${collect.output.dir}/[artifact]-[revision].[ext]"/>
	</target>
	
	<target name="package" depends="ivy.init">
		<delete dir="${package.output.dir}" quiet="true"/>
		<mkdir dir="${package.output.dir}"/>
		
		<ivy:resolve resolveId="copy.path" file="${basedir}/package-ivy.xml" transitive="false"/>
		<ivy:retrieve resolveId="copy.path" pattern="${package.output.dir}/[artifact]-[revision].[ext]" conf="package" type="jar"/>
		
		<ivy:resolve resolveId="copy.path" file="${basedir}/dependencies-ivy.xml" transitive="false"/>
		<ivy:retrieve resolveId="copy.path" pattern="${package.output.dir}/dep/[artifact]-[revision].[ext]" conf="dep" type="jar"/>

		<copy todir="${package.output.dir}" failonerror="false">
			<fileset dir="${basedir}/resources"/>
		</copy>

		<all-bundles target="package" buildpathRef="doc.bundles">
			<property name="package.output.dir" value="${package.output.dir}"/>
		</all-bundles>

		<mkdir dir="${artifacts.dir}"/>
		<zip destfile="${package.output.file}">
			<zipfileset dir="${package.dir}"/>
		</zip>
	</target>

	<target name="doc">
		<all-bundles target="doc" buildpathRef="doc.bundles"/>
	</target>

	<target name="doc-html">
		<all-bundles target="doc-html" buildpathRef="doc.bundles"/>
	</target>

	<!--P2 publishing properties-->
	<property name="publishing.dir" value="${basedir}/target/repository"/>
	<property name="p2.repo.url" value="file:///${publishing.dir}"/>

	<target name="p2.publish" depends="package, p2.extract-publisher"
			description="Publishes bundles, features and product">
		<copy todir="${basedir}/target/features" failonerror="false">
			<fileset dir="${basedir}/features"/>
		</copy>

		<xslt in="${basedir}/dependencies-ivy.xml" out="${basedir}/target/features/feature.xml"
			  style="${basedir}/create-feature-xml.xsl">
			<param name="GW.VERSION" expression="${bundle.version}"/>
		</xslt>

		<java jar="${p2.launcher.jar}" fork="true" taskname="p2bundles" failonerror="true" maxmemory="256m">
			<arg line="-application org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher"/>
			<arg line="-metadataRepository ${p2.repo.url}"/>
			<arg line="-artifactRepository ${p2.repo.url}"/>
			<arg line="-bundles ${package.output.dir},${package.output.dir}/dep"/>
			<arg line="-features ${basedir}/target/features"/>
			<arg line="-publishArtifacts"/>
			<arg line="-configs all"/>
		</java>

		<sshexec host="build.eclipse.org" 
				username="${eclipse.buildId}" 
				keyfile="${key.file}" 
				passphrase="${passphrase}"
				trust="true"
				command="mkdir -pv /opt/public/rt/gemini/web/update-site/${release.type}/${build.stamp}"/>

		<scp todir="${eclipse.buildId}@build.eclipse.org:/opt/public/rt/gemini/web/update-site/${release.type}/${build.stamp}/" 
				keyfile="${key.file}"
				passphrase="${passphrase}">
			<fileset dir="${publishing.dir}"/>
		</scp>
		<delete dir="${p2.publishing.dir}" excludes="p2agent.tar.gz" includeemptydirs="true" quiet="true"/>
	</target>

</project>
